/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : PhonyServiceStateMachineContext.sm
 */

package org.avm.device.generic.phony.impl;


public class PhonyServiceStateMachineContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public PhonyServiceStateMachineContext(PhonyServiceStateMachine owner)
    {
        super (PhonyMap.Closed);

        _owner = owner;
    }

    public PhonyServiceStateMachineContext(PhonyServiceStateMachine owner, PhonyServiceStateMachineState initState)
    {
        super (initState);

        _owner = owner;
    }

    public void enterStartState()
    {
        getState().Entry(this);
        return;
    }

    public void answer()
    {
        _transition = "answer";
        getState().answer(this);
        _transition = "";
        return;
    }

    public void close()
    {
        _transition = "close";
        getState().close(this);
        _transition = "";
        return;
    }

    public void dial(String phone, boolean listen)
    {
        _transition = "dial";
        getState().dial(this, phone, listen);
        _transition = "";
        return;
    }

    public void hangup()
    {
        _transition = "hangup";
        getState().hangup(this);
        _transition = "";
        return;
    }

    public void online()
    {
        _transition = "online";
        getState().online(this);
        _transition = "";
        return;
    }

    public void open()
    {
        _transition = "open";
        getState().open(this);
        _transition = "";
        return;
    }

    public void ring(String phone)
    {
        _transition = "ring";
        getState().ring(this, phone);
        _transition = "";
        return;
    }

    public PhonyServiceStateMachineState getState()
        throws statemap.StateUndefinedException
    {
        if (_state == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((PhonyServiceStateMachineState) _state);
    }

    protected PhonyServiceStateMachine getOwner()
    {
        return (_owner);
    }

    public void setOwner(PhonyServiceStateMachine owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            _owner = owner;
        }

        return;
    }

//---------------------------------------------------------------
// Member data.
//

    transient private PhonyServiceStateMachine _owner;

    public static abstract class PhonyServiceStateMachineState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected PhonyServiceStateMachineState(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(PhonyServiceStateMachineContext context) {}
        protected void Exit(PhonyServiceStateMachineContext context) {}

        protected void answer(PhonyServiceStateMachineContext context)
        {
            Default(context);
        }

        protected void close(PhonyServiceStateMachineContext context)
        {
            Default(context);
        }

        protected void dial(PhonyServiceStateMachineContext context, String phone, boolean listen)
        {
            Default(context);
        }

        protected void hangup(PhonyServiceStateMachineContext context)
        {
            Default(context);
        }

        protected void online(PhonyServiceStateMachineContext context)
        {
            Default(context);
        }

        protected void open(PhonyServiceStateMachineContext context)
        {
            Default(context);
        }

        protected void ring(PhonyServiceStateMachineContext context, String phone)
        {
            Default(context);
        }

        protected void Default(PhonyServiceStateMachineContext context)
        {
            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //
    }

    /* package */ static abstract class PhonyMap
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //
        public static final PhonyMap_Closed Closed =
            new PhonyMap_Closed("PhonyMap.Closed", 0);
        public static final PhonyMap_Ready Ready =
            new PhonyMap_Ready("PhonyMap.Ready", 1);
        public static final PhonyMap_Ringing Ringing =
            new PhonyMap_Ringing("PhonyMap.Ringing", 2);
        public static final PhonyMap_Dialing Dialing =
            new PhonyMap_Dialing("PhonyMap.Dialing", 3);
        public static final PhonyMap_Online Online =
            new PhonyMap_Online("PhonyMap.Online", 4);
        private static final PhonyMap_Default Default =
            new PhonyMap_Default("PhonyMap.Default", -1);

    }

    protected static class PhonyMap_Default
        extends PhonyServiceStateMachineState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected PhonyMap_Default(String name, int id)
        {
            super (name, id);
        }

        protected void close(PhonyServiceStateMachineContext context)
        {


            (context.getState()).Exit(context);
            context.setState(PhonyMap.Closed);
            (context.getState()).Entry(context);
            return;
        }

        protected void Default(PhonyServiceStateMachineContext context)
        {


            return;
        }
    //-----------------------------------------------------------
    // Member data.
    //
    }

    private static final class PhonyMap_Closed
        extends PhonyMap_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private PhonyMap_Closed(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(PhonyServiceStateMachineContext context)
            {
                PhonyServiceStateMachine ctxt = context.getOwner();

            ctxt.entryClosed();
            return;
        }

        protected void open(PhonyServiceStateMachineContext context)
        {
            PhonyServiceStateMachine ctxt = context.getOwner();

            if ( ctxt.isGsmAvailable() )
            {

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    ctxt.initialize();
                }
                finally
                {
                    context.setState(PhonyMap.Ready);
                    (context.getState()).Entry(context);
                }
            }
            else
            {
                super.open(context);
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class PhonyMap_Ready
        extends PhonyMap_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private PhonyMap_Ready(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(PhonyServiceStateMachineContext context)
            {
                PhonyServiceStateMachine ctxt = context.getOwner();

            ctxt.entryReady();
            return;
        }

        protected void dial(PhonyServiceStateMachineContext context, String phone, boolean listen)
        {
            PhonyServiceStateMachine ctxt = context.getOwner();


            (context.getState()).Exit(context);
            context.clearState();
            try
            {
                ctxt.dialing(phone, listen);
            }
            finally
            {
                context.setState(PhonyMap.Dialing);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void hangup(PhonyServiceStateMachineContext context)
        {


            (context.getState()).Exit(context);
            context.setState(PhonyMap.Ready);
            (context.getState()).Entry(context);
            return;
        }

        protected void ring(PhonyServiceStateMachineContext context, String phone)
        {
            PhonyServiceStateMachine ctxt = context.getOwner();


            (context.getState()).Exit(context);
            context.clearState();
            try
            {
                ctxt.ringing(phone);
            }
            finally
            {
                context.setState(PhonyMap.Ringing);
                (context.getState()).Entry(context);
            }
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class PhonyMap_Ringing
        extends PhonyMap_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private PhonyMap_Ringing(String name, int id)
        {
            super (name, id);
        }

        protected void Exit(PhonyServiceStateMachineContext context)
            {
            PhonyServiceStateMachine ctxt = context.getOwner();

            ctxt.exitRinging();
            return;
        }

        protected void answer(PhonyServiceStateMachineContext context)
        {
            PhonyServiceStateMachine ctxt = context.getOwner();


            (context.getState()).Exit(context);
            context.clearState();
            try
            {
                ctxt.answering();
            }
            finally
            {
                context.setState(PhonyMap.Online);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void hangup(PhonyServiceStateMachineContext context)
        {


            (context.getState()).Exit(context);
            context.setState(PhonyMap.Ready);
            (context.getState()).Entry(context);
            return;
        }

        protected void ring(PhonyServiceStateMachineContext context, String phone)
        {
            PhonyServiceStateMachine ctxt = context.getOwner();


            (context.getState()).Exit(context);
            context.clearState();
            try
            {
                ctxt.ringing(phone);
            }
            finally
            {
                context.setState(PhonyMap.Ringing);
                (context.getState()).Entry(context);
            }
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class PhonyMap_Dialing
        extends PhonyMap_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private PhonyMap_Dialing(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(PhonyServiceStateMachineContext context)
            {
                PhonyServiceStateMachine ctxt = context.getOwner();

            ctxt.entryDialing();
            return;
        }

        protected void Exit(PhonyServiceStateMachineContext context)
            {
            PhonyServiceStateMachine ctxt = context.getOwner();

            ctxt.exitDialing();
            return;
        }

        protected void hangup(PhonyServiceStateMachineContext context)
        {


            (context.getState()).Exit(context);
            context.setState(PhonyMap.Ready);
            (context.getState()).Entry(context);
            return;
        }

        protected void online(PhonyServiceStateMachineContext context)
        {


            (context.getState()).Exit(context);
            context.setState(PhonyMap.Online);
            (context.getState()).Entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class PhonyMap_Online
        extends PhonyMap_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private PhonyMap_Online(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(PhonyServiceStateMachineContext context)
            {
                PhonyServiceStateMachine ctxt = context.getOwner();

            ctxt.entryOnline();
            return;
        }

        protected void hangup(PhonyServiceStateMachineContext context)
        {


            (context.getState()).Exit(context);
            context.setState(PhonyMap.Ready);
            (context.getState()).Entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
