package org.angolight.bo.zones;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;

import org.apache.log4j.Logger;

public class CurvesThresholds {
	private double[][] _curves = null;
	private int _nbCurves;
	private int _speedMax;
	private double _triggerPercent;
	private Logger _log = Logger.getInstance(this.getClass());

	private String _curvesVersion = "NoCurves";

	public CurvesThresholds(double triggerPercent) {
		_triggerPercent = triggerPercent;

		LoadDefaultCurves();
	}

	public CurvesThresholds(double triggerPercent, String filename) {
		_triggerPercent = triggerPercent;

		try {
			LoadCurves(filename);
		} catch (Exception ex) {
			LoadDefaultCurves();
		}
	}

	private void LoadDefaultCurves() {
		// Version 2 Saint Brieux
		_curves = new double[][] {
				{ 1.5059, 1.7237, 1.6709, 1.6769, 1.6457, 1.6140, 1.5790,
						1.5574, 1.5582, 1.5622, 1.5648, 1.5685, 1.5760, 1.5793,
						1.5921, 1.6223, 1.6696, 1.7138, 1.7259, 1.7211, 1.7224,
						1.7293, 1.7309, 1.7284, 1.7318, 1.7334, 1.7322, 1.7221,
						1.7098, 1.6959, 1.6524, 1.5882, 1.5359, 1.5053, 1.4888,
						1.4641, 1.4300, 1.3960, 1.3780, 1.3641, 1.3491, 1.3310,
						1.2997, 1.2599, 1.2228, 1.2014, 1.1918, 1.1974, 1.1943,
						1.1881, 1.1797, 1.1703, 1.1509, 1.1172, 1.0781, 1.0486,
						1.0369, 1.0334, 1.0321, 1.0169, 1.0076, 1.0010, 0.9905,
						0.9806, 0.9575, 0.9324, 0.9181, 0.9000, 0.8835, 0.8552,
						0.8294, 0.8097, 0.7980, 0.7928, 0.7849, 0.7816, 0.7714,
						0.7538, 0.7316, 0.7123, 0.6908, 0.6745, 0.6513, 0.6395,
						0.6271, 0.6141, 0.5972, 0.5787, 0.5639, 0.5447, 0.5363,
						0.5171, 0.4967, 0.4665, 0.4313, 0.3974, 0.3372, 0.2264,
						0.1018, 0.0062, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
						0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
				{ 1.5059, 1.7237, 1.6709, 1.6769, 1.6457, 1.6140, 1.5790,
						1.5574, 1.5582, 1.5622, 1.5648, 1.5685, 1.5760, 1.5793,
						1.5921, 1.6223, 1.6696, 1.7138, 1.7259, 1.7211, 1.7224,
						1.7293, 1.7309, 1.7284, 1.7318, 1.7334, 1.7322, 1.7221,
						1.7098, 1.6959, 1.6524, 1.5882, 1.5359, 1.5053, 1.4888,
						1.4641, 1.4300, 1.3960, 1.3780, 1.3641, 1.3491, 1.3310,
						1.2997, 1.2599, 1.2228, 1.2014, 1.1918, 1.1974, 1.1943,
						1.1881, 1.1797, 1.1703, 1.1509, 1.1172, 1.0781, 1.0486,
						1.0369, 1.0334, 1.0321, 1.0169, 1.0076, 1.0010, 0.9905,
						0.9806, 0.9575, 0.9324, 0.9181, 0.9000, 0.8835, 0.8552,
						0.8294, 0.8097, 0.7980, 0.7928, 0.7849, 0.7816, 0.7714,
						0.7538, 0.7316, 0.7123, 0.6908, 0.6745, 0.6513, 0.6395,
						0.6271, 0.6141, 0.5972, 0.5787, 0.5639, 0.5447, 0.5363,
						0.5171, 0.4967, 0.4665, 0.4313, 0.3974, 0.3372, 0.2264,
						0.1018, 0.0062, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
						0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
				{ 1.4462, 1.5551, 1.5287, 1.5317, 1.5161, 1.5003, 1.4828,
						1.4720, 1.4723, 1.4743, 1.4796, 1.4848, 1.4847, 1.4676,
						1.4464, 1.4376, 1.4538, 1.4819, 1.4880, 1.4866, 1.4948,
						1.5085, 1.5118, 1.5078, 1.5071, 1.5072, 1.5057, 1.4893,
						1.4860, 1.4870, 1.4639, 1.4241, 1.3889, 1.3691, 1.3500,
						1.3223, 1.2944, 1.2676, 1.2483, 1.2305, 1.2027, 1.1707,
						1.1307, 1.0997, 1.0750, 1.0573, 1.0447, 1.0470, 1.0557,
						1.0629, 1.0617, 1.0484, 1.0180, 0.9786, 0.9440, 0.9252,
						0.9253, 0.9228, 0.9165, 0.9010, 0.9020, 0.9033, 0.8953,
						0.8903, 0.8776, 0.8576, 0.8407, 0.8228, 0.8059, 0.7800,
						0.7501, 0.7304, 0.7285, 0.7312, 0.7258, 0.7131, 0.6950,
						0.6748, 0.6498, 0.6291, 0.6045, 0.5857, 0.5549, 0.5335,
						0.5128, 0.5040, 0.4986, 0.4894, 0.4820, 0.4724, 0.4671,
						0.4489, 0.4203, 0.3807, 0.3379, 0.2987, 0.2416, 0.1528,
						0.0641, 0.0031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
						0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },

				{ 1.4462, 1.5551, 1.5287, 1.5317, 1.5161, 1.5003, 1.4828,
						1.4720, 1.4723, 1.4743, 1.4796, 1.4848, 1.4847, 1.4676,
						1.4464, 1.4376, 1.4538, 1.4819, 1.4880, 1.4866, 1.4948,
						1.5085, 1.5118, 1.5078, 1.5071, 1.5072, 1.5057, 1.4893,
						1.4860, 1.4870, 1.4639, 1.4241, 1.3889, 1.3691, 1.3500,
						1.3223, 1.2944, 1.2676, 1.2483, 1.2305, 1.2027, 1.1707,
						1.1307, 1.0997, 1.0750, 1.0573, 1.0447, 1.0470, 1.0557,
						1.0629, 1.0617, 1.0484, 1.0180, 0.9786, 0.9440, 0.9252,
						0.9253, 0.9228, 0.9165, 0.9010, 0.9020, 0.9033, 0.8953,
						0.8903, 0.8776, 0.8576, 0.8407, 0.8228, 0.8059, 0.7800,
						0.7501, 0.7304, 0.7285, 0.7312, 0.7258, 0.7131, 0.6950,
						0.6748, 0.6498, 0.6291, 0.6045, 0.5857, 0.5549, 0.5335,
						0.5128, 0.5040, 0.4986, 0.4894, 0.4820, 0.4724, 0.4671,
						0.4489, 0.4203, 0.3807, 0.3379, 0.2987, 0.2416, 0.1528,
						0.0641, 0.0031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
						0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
				{ 1.3865, 1.3865, 1.3865, 1.3865, 1.3865, 1.3865, 1.3865,
						1.3865, 1.3865, 1.3865, 1.3944, 1.4010, 1.3935, 1.3559,
						1.3006, 1.2529, 1.2380, 1.2500, 1.2500, 1.2522, 1.2672,
						1.2878, 1.2927, 1.2873, 1.2824, 1.2809, 1.2791, 1.2566,
						1.2622, 1.2781, 1.2754, 1.2601, 1.2418, 1.2328, 1.2111,
						1.1805, 1.1587, 1.1391, 1.1185, 1.0969, 1.0563, 1.0103,
						0.9617, 0.9395, 0.9272, 0.9133, 0.8977, 0.8966, 0.9172,
						0.9378, 0.9437, 0.9265, 0.8851, 0.8401, 0.8099, 0.8017,
						0.8138, 0.8122, 0.8008, 0.7852, 0.7963, 0.8056, 0.8000,
						0.8000, 0.7978, 0.7828, 0.7633, 0.7455, 0.7283, 0.7047,
						0.6708, 0.6510, 0.6590, 0.6695, 0.6666, 0.6447, 0.6185,
						0.5959, 0.5681, 0.5459, 0.5181, 0.4969, 0.4585, 0.4276,
						0.3985, 0.3940, 0.4000, 0.4000, 0.4000, 0.4000, 0.3978,
						0.3806, 0.3439, 0.2948, 0.2446, 0.2001, 0.1460, 0.0792,
						0.0264, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
						0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
				{ 1.3865, 1.3865, 1.3865, 1.3865, 1.3865, 1.3865, 1.3865,
						1.3865, 1.3865, 1.3865, 1.3944, 1.4010, 1.3935, 1.3559,
						1.3006, 1.2529, 1.2380, 1.2500, 1.2500, 1.2522, 1.2672,
						1.2878, 1.2927, 1.2873, 1.2824, 1.2809, 1.2791, 1.2566,
						1.2622, 1.2781, 1.2754, 1.2601, 1.2418, 1.2328, 1.2111,
						1.1805, 1.1587, 1.1391, 1.1185, 1.0969, 1.0563, 1.0103,
						0.9617, 0.9395, 0.9272, 0.9133, 0.8977, 0.8966, 0.9172,
						0.9378, 0.9437, 0.9265, 0.8851, 0.8401, 0.8099, 0.8017,
						0.8138, 0.8122, 0.8008, 0.7852, 0.7963, 0.8056, 0.8000,
						0.8000, 0.7978, 0.7828, 0.7633, 0.7455, 0.7283, 0.7047,
						0.6708, 0.6510, 0.6590, 0.6695, 0.6666, 0.6447, 0.6185,
						0.5959, 0.5681, 0.5459, 0.5181, 0.4969, 0.4585, 0.4276,
						0.3985, 0.3940, 0.4000, 0.4000, 0.4000, 0.4000, 0.3978,
						0.3806, 0.3439, 0.2948, 0.2446, 0.2001, 0.1460, 0.0792,
						0.0264, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
						0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
				{ 1.1092, 1.1092, 1.1092, 1.1092, 1.1092, 1.1092, 1.1092,
						1.1092, 1.1092, 1.1092, 1.1155, 1.1208, 1.1148, 1.0847,
						1.0405, 1.0023, 0.9904, 1.0000, 1.0000, 1.0017, 1.0138,
						1.0302, 1.0341, 1.0298, 1.0260, 1.0247, 1.0233, 1.0053,
						1.0098, 1.0225, 1.0203, 1.0081, 0.9935, 0.9862, 0.9689,
						0.9444, 0.9270, 0.9113, 0.8948, 0.8775, 0.8450, 0.8083,
						0.7694, 0.7516, 0.7418, 0.7306, 0.7182, 0.7173, 0.7338,
						0.7502, 0.7550, 0.7412, 0.7081, 0.6721, 0.6479, 0.6414,
						0.6510, 0.6497, 0.6406, 0.6281, 0.6370, 0.6445, 0.6400,
						0.6400, 0.6383, 0.6262, 0.6106, 0.5964, 0.5826, 0.5637,
						0.5366, 0.5208, 0.5272, 0.5356, 0.5333, 0.5157, 0.4948,
						0.4767, 0.4545, 0.4367, 0.4145, 0.3975, 0.3668, 0.3420,
						0.3188, 0.3152, 0.3200, 0.3200, 0.3200, 0.3200, 0.3183,
						0.3045, 0.2751, 0.2359, 0.1957, 0.1601, 0.1168, 0.0634,
						0.0211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
						0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
				{ 1.1092, 1.1092, 1.1092, 1.1092, 1.1092, 1.1092, 1.1092,
						1.1092, 1.1092, 1.1092, 1.1155, 1.1208, 1.1148, 1.0847,
						1.0405, 1.0023, 0.9904, 1.0000, 1.0000, 1.0017, 1.0138,
						1.0302, 1.0341, 1.0298, 1.0260, 1.0247, 1.0233, 1.0053,
						1.0098, 1.0225, 1.0203, 1.0081, 0.9935, 0.9862, 0.9689,
						0.9444, 0.9270, 0.9113, 0.8948, 0.8775, 0.8450, 0.8083,
						0.7694, 0.7516, 0.7418, 0.7306, 0.7182, 0.7173, 0.7338,
						0.7502, 0.7550, 0.7412, 0.7081, 0.6721, 0.6479, 0.6414,
						0.6510, 0.6497, 0.6406, 0.6281, 0.6370, 0.6445, 0.6400,
						0.6400, 0.6383, 0.6262, 0.6106, 0.5964, 0.5826, 0.5637,
						0.5366, 0.5208, 0.5272, 0.5356, 0.5333, 0.5157, 0.4948,
						0.4767, 0.4545, 0.4367, 0.4145, 0.3975, 0.3668, 0.3420,
						0.3188, 0.3152, 0.3200, 0.3200, 0.3200, 0.3200, 0.3183,
						0.3045, 0.2751, 0.2359, 0.1957, 0.1601, 0.1168, 0.0634,
						0.0211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
						0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
				{ -1.3488, -1.3487, -1.3488, -1.3490, -1.3493, -1.3497,
						-1.3501, -1.3506, -1.3512, -1.3518, -1.3525, -1.3532,
						-1.3539, -1.3546, -1.3554, -1.3562, -1.3569, -1.3576,
						-1.3583, -1.3590, -1.3597, -1.3602, -1.3608, -1.3612,
						-1.3616, -1.3619, -1.3621, -1.3622, -1.3623, -1.3621,
						-1.3619, -1.3615, -1.3610, -1.3604, -1.3596, -1.3586,
						-1.3574, -1.3561, -1.3545, -1.3528, -1.3507, -1.3484,
						-1.3457, -1.3427, -1.3393, -1.3354, -1.3311, -1.3263,
						-1.3209, -1.3150, -1.3084, -1.3013, -1.2935, -1.2852,
						-1.2762, -1.2666, -1.2565, -1.2457, -1.2344, -1.2225,
						-1.2101, -1.1970, -1.1835, -1.1694, -1.1547, -1.1395,
						-1.1238, -1.1075, -1.0908, -1.0735, -1.0557, -1.0374,
						-1.0186, -0.9994, -0.9796, -0.9594, -0.9387, -0.9176,
						-0.8960, -0.8739, -0.8514, -0.8285, -0.8051, -0.7813,
						-0.7571, -0.7325, -0.7075, -0.6820, -0.6562, -0.6300,
						-0.6034, -0.5764, -0.5490, -0.5213, -0.4932, -0.4648,
						-0.4360, -0.4069, -0.3774, -0.3476, -0.3175, -0.2871,
						-0.2564, -0.2253, -0.1940, -0.1623, -0.1304, -0.0982,
						-0.0657, -0.0330, -0.0000 },
				{ -1.3488, -1.3487, -1.3488, -1.3490, -1.3493, -1.3497,
						-1.3501, -1.3506, -1.3512, -1.3518, -1.3525, -1.3532,
						-1.3539, -1.3546, -1.3554, -1.3562, -1.3569, -1.3576,
						-1.3583, -1.3590, -1.3597, -1.3602, -1.3608, -1.3612,
						-1.3616, -1.3619, -1.3621, -1.3622, -1.3623, -1.3621,
						-1.3619, -1.3615, -1.3610, -1.3604, -1.3596, -1.3586,
						-1.3574, -1.3561, -1.3545, -1.3528, -1.3507, -1.3484,
						-1.3457, -1.3427, -1.3393, -1.3354, -1.3311, -1.3263,
						-1.3209, -1.3150, -1.3084, -1.3013, -1.2935, -1.2852,
						-1.2762, -1.2666, -1.2565, -1.2457, -1.2344, -1.2225,
						-1.2101, -1.1970, -1.1835, -1.1694, -1.1547, -1.1395,
						-1.1238, -1.1075, -1.0908, -1.0735, -1.0557, -1.0374,
						-1.0186, -0.9994, -0.9796, -0.9594, -0.9387, -0.9176,
						-0.8960, -0.8739, -0.8514, -0.8285, -0.8051, -0.7813,
						-0.7571, -0.7325, -0.7075, -0.6820, -0.6562, -0.6300,
						-0.6034, -0.5764, -0.5490, -0.5213, -0.4932, -0.4648,
						-0.4360, -0.4069, -0.3774, -0.3476, -0.3175, -0.2871,
						-0.2564, -0.2253, -0.1940, -0.1623, -0.1304, -0.0982,
						-0.0657, -0.0330, -0.0000 },
				{ -1.6860, -1.6859, -1.6860, -1.6863, -1.6866, -1.6871,
						-1.6876, -1.6883, -1.6890, -1.6898, -1.6906, -1.6915,
						-1.6924, -1.6933, -1.6942, -1.6952, -1.6961, -1.6970,
						-1.6979, -1.6988, -1.6996, -1.7003, -1.7010, -1.7015,
						-1.7020, -1.7024, -1.7027, -1.7028, -1.7028, -1.7027,
						-1.7024, -1.7019, -1.7013, -1.7005, -1.6994, -1.6982,
						-1.6968, -1.6951, -1.6932, -1.6910, -1.6884, -1.6855,
						-1.6822, -1.6784, -1.6741, -1.6693, -1.6639, -1.6578,
						-1.6511, -1.6437, -1.6356, -1.6266, -1.6169, -1.6065,
						-1.5952, -1.5833, -1.5706, -1.5572, -1.5430, -1.5281,
						-1.5126, -1.4963, -1.4793, -1.4617, -1.4434, -1.4244,
						-1.4047, -1.3844, -1.3634, -1.3419, -1.3196, -1.2968,
						-1.2733, -1.2492, -1.2246, -1.1993, -1.1734, -1.1470,
						-1.1200, -1.0924, -1.0643, -1.0356, -1.0064, -0.9767,
						-0.9464, -0.9156, -0.8843, -0.8525, -0.8202, -0.7875,
						-0.7542, -0.7205, -0.6863, -0.6516, -0.6165, -0.5810,
						-0.5450, -0.5086, -0.4718, -0.4345, -0.3969, -0.3589,
						-0.3204, -0.2816, -0.2425, -0.2029, -0.1630, -0.1228,
						-0.0822, -0.0413, -0.0000 },
				{ -1.6860, -1.6859, -1.6860, -1.6863, -1.6866, -1.6871,
						-1.6876, -1.6883, -1.6890, -1.6898, -1.6906, -1.6915,
						-1.6924, -1.6933, -1.6942, -1.6952, -1.6961, -1.6970,
						-1.6979, -1.6988, -1.6996, -1.7003, -1.7010, -1.7015,
						-1.7020, -1.7024, -1.7027, -1.7028, -1.7028, -1.7027,
						-1.7024, -1.7019, -1.7013, -1.7005, -1.6994, -1.6982,
						-1.6968, -1.6951, -1.6932, -1.6910, -1.6884, -1.6855,
						-1.6822, -1.6784, -1.6741, -1.6693, -1.6639, -1.6578,
						-1.6511, -1.6437, -1.6356, -1.6266, -1.6169, -1.6065,
						-1.5952, -1.5833, -1.5706, -1.5572, -1.5430, -1.5281,
						-1.5126, -1.4963, -1.4793, -1.4617, -1.4434, -1.4244,
						-1.4047, -1.3844, -1.3634, -1.3419, -1.3196, -1.2968,
						-1.2733, -1.2492, -1.2246, -1.1993, -1.1734, -1.1470,
						-1.1200, -1.0924, -1.0643, -1.0356, -1.0064, -0.9767,
						-0.9464, -0.9156, -0.8843, -0.8525, -0.8202, -0.7875,
						-0.7542, -0.7205, -0.6863, -0.6516, -0.6165, -0.5810,
						-0.5450, -0.5086, -0.4718, -0.4345, -0.3969, -0.3589,
						-0.3204, -0.2816, -0.2425, -0.2029, -0.1630, -0.1228,
						-0.0822, -0.0413, -0.0000 },
				{ -1.9801, -1.9801, -1.9801, -1.9802, -1.9803, -1.9804,
						-1.9806, -1.9808, -1.9811, -1.9813, -1.9817, -1.9820,
						-1.9824, -1.9828, -1.9833, -1.9838, -1.9843, -1.9849,
						-1.9855, -1.9861, -1.9867, -1.9874, -1.9881, -1.9888,
						-1.9896, -1.9904, -1.9912, -1.9921, -1.9929, -1.9938,
						-1.9947, -1.9956, -1.9965, -1.9973, -1.9979, -1.9985,
						-1.9989, -1.9992, -1.9992, -1.9990, -1.9985, -1.9977,
						-1.9965, -1.9949, -1.9928, -1.9902, -1.9871, -1.9835,
						-1.9791, -1.9742, -1.9685, -1.9621, -1.9549, -1.9470,
						-1.9383, -1.9287, -1.9184, -1.9072, -1.8951, -1.8822,
						-1.8684, -1.8537, -1.8382, -1.8218, -1.8045, -1.7863,
						-1.7672, -1.7472, -1.7264, -1.7046, -1.6820, -1.6584,
						-1.6340, -1.6086, -1.5823, -1.5551, -1.5270, -1.4979,
						-1.4679, -1.4370, -1.4052, -1.3724, -1.3387, -1.3040,
						-1.2684, -1.2319, -1.1944, -1.1559, -1.1165, -1.0761,
						-1.0348, -0.9924, -0.9492, -0.9049, -0.8596, -0.8134,
						-0.7662, -0.7180, -0.6688, -0.6186, -0.5674, -0.5153,
						-0.4621, -0.4079, -0.3527, -0.2964, -0.2392, -0.1809,
						-0.1217, -0.0613, -0.0000 },
				{ -1.9801, -1.9801, -1.9801, -1.9802, -1.9803, -1.9804,
						-1.9806, -1.9808, -1.9811, -1.9813, -1.9817, -1.9820,
						-1.9824, -1.9828, -1.9833, -1.9838, -1.9843, -1.9849,
						-1.9855, -1.9861, -1.9867, -1.9874, -1.9881, -1.9888,
						-1.9896, -1.9904, -1.9912, -1.9921, -1.9929, -1.9938,
						-1.9947, -1.9956, -1.9965, -1.9973, -1.9979, -1.9985,
						-1.9989, -1.9992, -1.9992, -1.9990, -1.9985, -1.9977,
						-1.9965, -1.9949, -1.9928, -1.9902, -1.9871, -1.9835,
						-1.9791, -1.9742, -1.9685, -1.9621, -1.9549, -1.9470,
						-1.9383, -1.9287, -1.9184, -1.9072, -1.8951, -1.8822,
						-1.8684, -1.8537, -1.8382, -1.8218, -1.8045, -1.7863,
						-1.7672, -1.7472, -1.7264, -1.7046, -1.6820, -1.6584,
						-1.6340, -1.6086, -1.5823, -1.5551, -1.5270, -1.4979,
						-1.4679, -1.4370, -1.4052, -1.3724, -1.3387, -1.3040,
						-1.2684, -1.2319, -1.1944, -1.1559, -1.1165, -1.0761,
						-1.0348, -0.9924, -0.9492, -0.9049, -0.8596, -0.8134,
						-0.7662, -0.7180, -0.6688, -0.6186, -0.5674, -0.5153,
						-0.4621, -0.4079, -0.3527, -0.2964, -0.2392, -0.1809,
						-0.1217, -0.0613, -0.0000 },
				{ -2.2742, -2.2742, -2.2742, -2.2741, -2.2739, -2.2738,
						-2.2736, -2.2734, -2.2731, -2.2729, -2.2728, -2.2726,
						-2.2725, -2.2724, -2.2724, -2.2724, -2.2725, -2.2727,
						-2.2730, -2.2734, -2.2739, -2.2745, -2.2752, -2.2761,
						-2.2772, -2.2784, -2.2798, -2.2813, -2.2830, -2.2850,
						-2.2871, -2.2893, -2.2917, -2.2940, -2.2964, -2.2988,
						-2.3011, -2.3032, -2.3052, -2.3070, -2.3086, -2.3098,
						-2.3108, -2.3113, -2.3115, -2.3112, -2.3104, -2.3091,
						-2.3072, -2.3047, -2.3015, -2.2976, -2.2930, -2.2875,
						-2.2813, -2.2742, -2.2662, -2.2572, -2.2472, -2.2362,
						-2.2242, -2.2111, -2.1970, -2.1818, -2.1656, -2.1482,
						-2.1297, -2.1101, -2.0893, -2.0674, -2.0443, -2.0201,
						-1.9946, -1.9679, -1.9400, -1.9109, -1.8805, -1.8488,
						-1.8159, -1.7816, -1.7461, -1.7092, -1.6710, -1.6314,
						-1.5905, -1.5481, -1.5044, -1.4593, -1.4128, -1.3648,
						-1.3153, -1.2644, -1.2120, -1.1582, -1.1028, -1.0459,
						-0.9874, -0.9274, -0.8659, -0.8027, -0.7380, -0.6717,
						-0.6037, -0.5341, -0.4629, -0.3900, -0.3154, -0.2391,
						-0.1611, -0.0814, 0.0000 },
				{ -2.2742, -2.2742, -2.2742, -2.2741, -2.2739, -2.2738,
						-2.2736, -2.2734, -2.2731, -2.2729, -2.2728, -2.2726,
						-2.2725, -2.2724, -2.2724, -2.2724, -2.2725, -2.2727,
						-2.2730, -2.2734, -2.2739, -2.2745, -2.2752, -2.2761,
						-2.2772, -2.2784, -2.2798, -2.2813, -2.2830, -2.2850,
						-2.2871, -2.2893, -2.2917, -2.2940, -2.2964, -2.2988,
						-2.3011, -2.3032, -2.3052, -2.3070, -2.3086, -2.3098,
						-2.3108, -2.3113, -2.3115, -2.3112, -2.3104, -2.3091,
						-2.3072, -2.3047, -2.3015, -2.2976, -2.2930, -2.2875,
						-2.2813, -2.2742, -2.2662, -2.2572, -2.2472, -2.2362,
						-2.2242, -2.2111, -2.1970, -2.1818, -2.1656, -2.1482,
						-2.1297, -2.1101, -2.0893, -2.0674, -2.0443, -2.0201,
						-1.9946, -1.9679, -1.9400, -1.9109, -1.8805, -1.8488,
						-1.8159, -1.7816, -1.7461, -1.7092, -1.6710, -1.6314,
						-1.5905, -1.5481, -1.5044, -1.4593, -1.4128, -1.3648,
						-1.3153, -1.2644, -1.2120, -1.1582, -1.1028, -1.0459,
						-0.9874, -0.9274, -0.8659, -0.8027, -0.7380, -0.6717,
						-0.6037, -0.5341, -0.4629, -0.3900, -0.3154, -0.2391,
						-0.1611, -0.0814, 0.0000 } };

		_nbCurves = 8;
		_speedMax = 110;
		_curvesVersion = "Version 1 Saint Brieuc buit in";

		for (int curve = 0; curve < _nbCurves; curve++) {
			for (int speed = 0; speed <= _speedMax; speed++) {
				if (curve < _nbCurves / 2) {
					_curves[2 * curve][speed] = _curves[2 * curve][speed]
							* (1 + _triggerPercent / 100); // Up
					_curves[2 * curve + 1][speed] = _curves[2 * curve][speed]
							* (1 - _triggerPercent / 100); // Down
				} else {
					_curves[2 * curve][speed] = _curves[2 * curve][speed]
							* (1 - _triggerPercent / 100); // Up
					_curves[2 * curve + 1][speed] = _curves[2 * curve][speed]
							* (1 + _triggerPercent / 100); // Down
				}
			}
		}

	}

	public void LoadCurves(String filename) throws Exception {
		int nbCurves = 0;
		int nbPoints = 0;
		_curvesVersion = "NoCurves";

		try {
			File file = new File(filename);
			FileReader fileReader = new FileReader(file);

			if (fileReader != null) {
				BufferedReader buffReader = new BufferedReader(fileReader);
				String sLine = buffReader.readLine().trim();
				nbCurves = Integer.parseInt(sLine);
				sLine = buffReader.readLine().trim();
				nbPoints = Integer.parseInt(sLine);

				_curves = new double[2 * nbCurves][nbPoints];

				for (int curve = 0; curve < nbCurves; curve++) {
					sLine = buffReader.readLine().trim();
					int start = 0;
					int index = -1;
					String sValue;
					double value;

					for (int speed = 0; speed < nbPoints; speed++) {
						index = sLine.indexOf(',', start);

						if (index >= 0) {
							sValue = sLine.substring(start, index);
						} else {
							sValue = sLine.substring(start);
						}

						value = Double.parseDouble(sValue);

						_curves[2 * curve][speed] = value;
						_curves[2 * curve + 1][speed] = value;

						start = index + 1;
					}
				}

				fileReader.close();
			}
		} catch (Exception ex) {
			_curves = null;
			_log.warn("LoadCurves Exception : " + ex);
			throw ex;
		}

		_nbCurves = nbCurves;
		_speedMax = nbPoints - 1;

		for (int curve = 0; curve < _nbCurves; curve++) {
			for (int speed = 0; speed <= _speedMax; speed++) {
				if (curve < _nbCurves / 2) {
					_curves[2 * curve][speed] = _curves[2 * curve][speed]
							* (1 + _triggerPercent / 100); // Up
					_curves[2 * curve + 1][speed] = _curves[2 * curve][speed]
							* (1 - _triggerPercent / 100); // Down
				} else {
					_curves[2 * curve][speed] = _curves[2 * curve][speed]
							* (1 - _triggerPercent / 100); // Up
					_curves[2 * curve + 1][speed] = _curves[2 * curve][speed]
							* (1 + _triggerPercent / 100); // Down
				}
			}
		}

		_curvesVersion = "File curves " + filename;
	}

	public double getDownThreshold(int curve, int speed) {
		if (_curves == null)
			throw new IllegalArgumentException("tableau non alloue");

		if ((curve <= 0) || (speed < 0))
			throw new IllegalArgumentException("seuil non trouve " + curve
					+ " " + speed);

		if (curve > _nbCurves)
			throw new IllegalArgumentException("seuil non trouve " + curve
					+ " Max: " + _nbCurves);

		if (speed > _speedMax)
			speed = _speedMax;

		return _curves[2 * (curve - 1) + 1][speed];
	}

	public double getUpThreshold(int curve, int speed) {
		if (_curves == null)
			throw new IllegalArgumentException("tableau non alloue");

		if ((curve <= 0) || (speed < 0))
			throw new IllegalArgumentException("seuil non trouve " + curve
					+ " " + speed);

		if (curve > _nbCurves)
			throw new IllegalArgumentException("seuil non trouve " + curve
					+ " Max: " + _nbCurves);

		if (speed > _speedMax)
			speed = _speedMax;

		return _curves[2 * (curve - 1)][speed];
	}

	/**
	 * @return the curvesVersion
	 */
	public String getCurvesVersion() {
		return _curvesVersion;
	}

}
