/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : WifiManagerStateMachineContext.sm
 */

package org.avm.elementary.wifi;


public class WifiManagerStateMachineContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public WifiManagerStateMachineContext(WifiManagerStateMachine owner)
    {
        super (OutWifiZoneMap.Disconnected);

        _owner = owner;
    }

    public WifiManagerStateMachineContext(WifiManagerStateMachine owner, WifiManagerStateMachineState initState)
    {
        super (initState);

        _owner = owner;
    }

    public void enterStartState()
    {
        getState().Entry(this);
        return;
    }

    public void connect()
    {
        _transition = "connect";
        getState().connect(this);
        _transition = "";
        return;
    }

    public void disconnect()
    {
        _transition = "disconnect";
        getState().disconnect(this);
        _transition = "";
        return;
    }

    public void entryWifiZone()
    {
        _transition = "entryWifiZone";
        getState().entryWifiZone(this);
        _transition = "";
        return;
    }

    public void exitWifiZone()
    {
        _transition = "exitWifiZone";
        getState().exitWifiZone(this);
        _transition = "";
        return;
    }

    public WifiManagerStateMachineState getState()
        throws statemap.StateUndefinedException
    {
        if (_state == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((WifiManagerStateMachineState) _state);
    }

    protected WifiManagerStateMachine getOwner()
    {
        return (_owner);
    }

    public void setOwner(WifiManagerStateMachine owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            _owner = owner;
        }

        return;
    }

//---------------------------------------------------------------
// Member data.
//

    transient private WifiManagerStateMachine _owner;

    public static abstract class WifiManagerStateMachineState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected WifiManagerStateMachineState(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(WifiManagerStateMachineContext context) {}
        protected void Exit(WifiManagerStateMachineContext context) {}

        protected void connect(WifiManagerStateMachineContext context)
        {
            Default(context);
        }

        protected void disconnect(WifiManagerStateMachineContext context)
        {
            Default(context);
        }

        protected void entryWifiZone(WifiManagerStateMachineContext context)
        {
            Default(context);
        }

        protected void exitWifiZone(WifiManagerStateMachineContext context)
        {
            Default(context);
        }

        protected void Default(WifiManagerStateMachineContext context)
        {
            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //
    }

    /* package */ static abstract class OutWifiZoneMap
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //
        public static final OutWifiZoneMap_Disconnected Disconnected =
            new OutWifiZoneMap_Disconnected("OutWifiZoneMap.Disconnected", 0);
        private static final OutWifiZoneMap_Default Default =
            new OutWifiZoneMap_Default("OutWifiZoneMap.Default", -1);

    }

    protected static class OutWifiZoneMap_Default
        extends WifiManagerStateMachineState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected OutWifiZoneMap_Default(String name, int id)
        {
            super (name, id);
        }

        protected void entryWifiZone(WifiManagerStateMachineContext context)
        {
            WifiManagerStateMachine ctxt = context.getOwner();


            (context.getState()).Exit(context);
            context.clearState();
            try
            {
                ctxt.startWifi();
            }
            finally
            {
                context.setState(InWifiZoneMap.Disconnected);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void exitWifiZone(WifiManagerStateMachineContext context)
        {


            return;
        }
    //-----------------------------------------------------------
    // Member data.
    //
    }

    private static final class OutWifiZoneMap_Disconnected
        extends OutWifiZoneMap_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private OutWifiZoneMap_Disconnected(String name, int id)
        {
            super (name, id);
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    /* package */ static abstract class InWifiZoneMap
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //
        public static final InWifiZoneMap_Disconnected Disconnected =
            new InWifiZoneMap_Disconnected("InWifiZoneMap.Disconnected", 1);
        public static final InWifiZoneMap_Connected Connected =
            new InWifiZoneMap_Connected("InWifiZoneMap.Connected", 2);
        private static final InWifiZoneMap_Default Default =
            new InWifiZoneMap_Default("InWifiZoneMap.Default", -1);

    }

    protected static class InWifiZoneMap_Default
        extends WifiManagerStateMachineState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected InWifiZoneMap_Default(String name, int id)
        {
            super (name, id);
        }

        protected void entryWifiZone(WifiManagerStateMachineContext context)
        {


            return;
        }

        protected void exitWifiZone(WifiManagerStateMachineContext context)
        {
            WifiManagerStateMachine ctxt = context.getOwner();


            (context.getState()).Exit(context);
            context.clearState();
            try
            {
                ctxt.stopWifi();
            }
            finally
            {
                context.setState(OutWifiZoneMap.Disconnected);
                (context.getState()).Entry(context);
            }
            return;
        }
    //-----------------------------------------------------------
    // Member data.
    //
    }

    private static final class InWifiZoneMap_Disconnected
        extends InWifiZoneMap_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private InWifiZoneMap_Disconnected(String name, int id)
        {
            super (name, id);
        }

        protected void connect(WifiManagerStateMachineContext context)
        {


            (context.getState()).Exit(context);
            context.setState(InWifiZoneMap.Connected);
            (context.getState()).Entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class InWifiZoneMap_Connected
        extends InWifiZoneMap_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private InWifiZoneMap_Connected(String name, int id)
        {
            super (name, id);
        }

        protected void disconnect(WifiManagerStateMachineContext context)
        {


            (context.getState()).Exit(context);
            context.setState(InWifiZoneMap.Connected);
            (context.getState()).Entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
