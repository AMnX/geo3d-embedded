<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<?xml-stylesheet type="text/css" href="../data/css/lignes.css"?>

<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   id="svg">

 
   <defs id="defs-pointilles">
	<g id="pointilles" style="fill:white" >
		<rect id="r1" x="0" y="0" width="6" height="1"/>
		<rect id="r2" x="9" y="0" width="4" height="1"/>
		<rect  id="r3" x="16" y="0" width="2" height="1"/>
	</g>
   </defs>

  <script
     type="text/javascript"
     id="script2543"><![CDATA[
var svgNS = "http://www.w3.org/2000/svg";
var height=screen.height;
var width=screen.width;
var stopSpace=width * 0.16; //200
var stopRayon=width * 0.031; // 40
var SIZEY=height - (height * 0.09); //height / 1.1 ; // 700  avant 1.46
var lineSize=height * 0.12; //120 8.5
var X=width * 0.07; // 70
var Y=SIZEY - lineSize - (height * 0.09); //height - (height * 0.15); // 600  avant 1.7
var epaisseur= height * 0.002; //6
var fontSize=height * 0.10;//80; 12.8
var originX=width * 0.03;
var originY=-lineSize/2;
var nbStopToDraw=1;

var currentRang=-1;
var lastRang=0;
var arrets=null;
var stopCount=0;
var stopTranslation=0;


var defaultLineStyle="ligne6";
var defaultStopStyle="stop-next";

var flagClignotte=true;
var timerClignotte;


// this is what makes them accessible by the HTML
top.reset = reset;
top.addStop = addStop;
top.setCurrentStop = setCurrentStop;
top.translate = translate;
top.zoom = zoom;
top.test = test;
top.setLineStyle = setLineStyle;


function setLineStyle(style) {
	defaultLineStyle = style;
	//defaultStopStyle = style;
	var line = document.getElementById("line");
	if (line != null){
		//line.setAttribute("style","fill:"+defaultLineStyle+";fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:"+epaisseur+"px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1");
		line.setAttribute("class",style);
	}
}


function getWindowWidth() {
  var result;
  htmldocument = top.window.document; 
  result = document.compatMode=='CSS1Compat' && !window.opera?htmldocument.documentElement.clientWidth:htmldocument.body.clientWidth;
  return result;
}
 
function getWindowHeight() {
  var result;
  htmldocument = top.window.document;
  result = document.compatMode=='CSS1Compat' && !window.opera?htmldocument.documentElement.clientHeight:htmldocument.body.clientHeight;
  return result;
}


function test(){
	if (currentRang==lastRang){
		arretId = arrets[currentRang][0];
	    setCurrentStop(arretId, false);
	    lastRang--;
	}
	else{
		currentRang++;
		arretId = arrets[currentRang][0];
	    setCurrentStop(arretId, true);
	    lastRang=currentRang;
	}
	
}

function clignotteProchainArret(activate){
	if (activate){
		if (arrets != null){
			if (flagClignotte){
				var tmpVal=currentRang+1;
				setCircleStyle(getIdFromArrets(tmpVal), "stop-next");
				flagClignotte=false;
			}
			else{
				var tmpVal=currentRang+1;
				setCircleStyle(getIdFromArrets(tmpVal), "stop-empty");	
				flagClignotte=true;
			}
		}
		if(timerClignotte != null){
			clearTimeout(timerClignotte);
			timerClignotte=null;
		}
		timerClignotte=setTimeout("clignotteProchainArret(true)", 800);
	}
	else{
		clearTimeout(timerClignotte);
		timerClignotte=null;
	}

}

function init(){
	currentRang=-1;
	lastRang=0;
	stopTranslation=0;
}

function reset(){
	init();
	
	arrets=null;
	stopCount=0;

	var svg = document.getElementById("svg");
	svg.setAttribute("width",0);
	svg.setAttribute("height",SIZEY);

	var root = document.getElementById("root");
	root.setAttribute("transform", "translate("+X+" "+Y+")");
	
	var graphligne = document.getElementById("graphligne");	
	graphligne.removeAttribute("transform");
	var gligne = document.getElementById("gligne");
	if (gligne != null){
		graphligne.removeChild(gligne);
	}	
	var garrets = document.getElementById("garrets");
	if (garrets != null){
		graphligne.removeChild(garrets);
	}	

	var transform="";
	var coteGauche = document.getElementById("coteGauche");
	transform="translate(";
	transform+=(-X+2);
	transform+=" ";
	transform+=-(lineSize+epaisseur*2)/2;
	transform+=")";
	coteGauche.setAttribute("transform", transform);
 
	var coteDroit = document.getElementById("coteDroit");
	transform="translate(";
	transform+=getWindowWidth()-(12*5+6*5-5);
	transform+=" ";
	transform+=-(lineSize+epaisseur*2)/2;
	transform+=")";
	coteDroit.setAttribute("transform", transform);
 	transform="";

	createLine();
	clignotteProchainArret(true);
	
}


function zoom(factor){
	var graphligne = document.getElementById("graphligne");
	
	var sTransform="";

	//sTransform +="translate("+(-X)+" "+(-Y)+") ";
	sTransform +="scale("+factor+") ";
	//sTransform +="translate("+(X)+" "+(Y)+") ";
	graphligne.setAttribute("transform", sTransform);
	alert("transform " + sTransform);
}

function getIdFromArrets (pos){
	return "circle"+arrets[pos][0]+"-"+arrets[pos][2];
}

function getCircleId (id, rang){
	return 'circle'+id+'-'+rang;
}

function translate(circleId){ 
		var stopCircle0 = document.getElementById(getIdFromArrets(nbStopToDraw));
		if (stopCircle0 != null){
			var stopCircle = document.getElementById(circleId);
			var x0=stopCircle0.getAttribute('cx');
			var x1=stopCircle.getAttribute('cx');
			var dx=x1-x0;
			if (dx>0){
				var graphligne = document.getElementById("graphligne");
				graphligne.setAttribute("transform", "translate("+(-dx)+",0)");
				stopTranslation=dx/stopSpace;
					//alert("dx="+dx+ "stopTranslation="+stopTranslation);
			}
		}
}

function createLine(points){
	var gligne = document.createElementNS(svgNS,"g");
	gligne.setAttribute("id","gligne");
	var garrets = document.createElementNS(svgNS,"g");
	garrets.setAttribute("id","garrets");
	document.getElementById("graphligne").appendChild(gligne);
	document.getElementById("graphligne").appendChild(garrets);


	var line = document.createElementNS(svgNS,"rect");
	line.setAttribute("id","line");
	line.setAttribute("width",stopSpace);
	line.setAttribute("height", lineSize);
   	line.setAttribute("x", originX);
   	line.setAttribute("y", originY);
	line.setAttribute("ry", lineSize/2);
	line.setAttribute("rx", lineSize/2);
	line.setAttribute("class",defaultLineStyle);
	document.getElementById("gligne").appendChild(line);
}



function setCircleStyle(circleid, style){	
		var stopCircle = document.getElementById(circleid);
		if (stopCircle != null){
			//stopCircle.setAttribute("style","fill:"+color+";fill-opacity:1;stroke:#140000;stroke-width:"+epaisseur+";stroke-linejoin:round;stroke-miterlimit:13.80000019;stroke-dasharray:none;stroke-opacity:1");
			stopCircle.setAttribute("class", style);
		}
}

function setCurrentStop(id, inside, rang){
	element = document.getElementById(id);
	if (element != null) {
		
		//-- translation vers la gauche de tout le graphique si le terminus n'est pas visible
		node = document.getElementById("graphligne");
		dernier = document.getElementById(getIdFromArrets(arrets.length-1));
		var dx=parseFloat(dernier.getAttribute('cx')) - (stopTranslation*(stopSpace)) + ((nbStopToDraw)*stopSpace) + (name.length*fontSize);
		if (dx > getWindowWidth()){
			//alert("need translation");
			translate(getCircleId (id, rang));
		}


		style=defaultStopStyle;
		for (var i=0; i<arrets.length; i++){
		   if (arrets[i][0]==id && arrets[i][2]==rang){
		 			  	style="stop-empty";
                        currentRang=i;
		   }
			//alert ("id: "+ getIdFromArrets(i));
		   setCircleStyle(getIdFromArrets(i) , style);
		}
		if (inside==true){
			setCircleStyle(getCircleId(id, rang), "stop-arrived");
			clignotteProchainArret(false);
		}
		else{
			setCircleStyle(getCircleId(id, rang), defaultStopStyle);
			clignotteProchainArret(true);
		}

	}


}


function debugArret(log, tab){
  var buf=log;
  if (tab == null){
	buf+=" null";
  }
  else {
	buf+="\n";
  	for (var i=0;i<tab.length;i++){
			buf += "id:"+tab[i][0]+"-nom:"+tab[i][1]+"\n";
  	}
  }
  alert(buf);
}

function addStop(id, name, rang){


        //alert("create stop " + name);
	temp = new Array(stopCount+1);
	for (var i=0;i<stopCount;i++){
		temp[i] = new Array(3);
		temp[i][0]=arrets[i][0];
		temp[i][1]=arrets[i][1];
		temp[i][2]=arrets[i][2];
	}
	temp[stopCount] = new Array(3);
	temp[stopCount][0]=id;
	temp[stopCount][1]=name;
	temp[stopCount][2]=rang;
	arrets=temp;

	stopCount++;
	var line = document.getElementById("line");
	line.setAttribute("width",stopCount*stopSpace);
	var svg = document.getElementById("svg");
	var maxx=stopCount*stopSpace+name.length*fontSize;
	svg.setAttribute("width",maxx>(getWindowWidth()-20)?(getWindowWidth()-20):maxx);
	
	var g = document.createElementNS(svgNS,"g");
	g.setAttribute("id",id);
	document.getElementById("garrets").appendChild(g);

	var stopCircle = document.createElementNS(svgNS,"circle");
	circleid=getCircleId(id,rang);
	stopCircle.setAttribute('id',circleid);	
	stopCircle.setAttribute('title',name);	
	//stopCircle.setAttribute("style","fill:#ffffff;fill-opacity:1;stroke:#140000;stroke-width:"+epaisseur+";stroke-linejoin:round;stroke-miterlimit:13.80000019;stroke-dasharray:none;stroke-opacity:1");
    stopCircle.setAttribute("class", "stop-empty");
    stopCircle.setAttribute("cx", originX+stopSpace/2+stopSpace*(stopCount-1));
    stopCircle.setAttribute("cy", originY+lineSize/2);
    stopCircle.setAttribute("r", stopRayon);
	g.appendChild(stopCircle);

	
	var stopName = document.createElementNS(svgNS,"text");
	stopName.setAttribute("id","text"+id);	
	stopName.setAttribute("style","font-size:"+fontSize+"px;font-style:normal;font-weight:normal;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Context Ultra Condensed SSi");
    stopName.setAttribute("x",0);
    stopName.setAttribute("y",0);
    stopName.setAttribute("transform", "rotate(-40)");
  
	var textNode = document.createTextNode(name);
	stopName.appendChild(textNode);
	
	var gtext = document.createElementNS(svgNS,"g");
    gtext.setAttribute("transform", "translate("+(originX+stopSpace/2+stopSpace*(stopCount-1))+","+(originY-(Math.abs(lineSize-stopRayon))/2)+")");

	gtext.appendChild(stopName);
	
	g.appendChild(gtext);
}
]]>
</script>
  <g
     id="root"
     >
	<g id="graphligne">
		<g id="gligne"></g>
		<g id="garrets"></g>
	</g>

	<g id="coteGauche" transform="translate(-50 -65)">
	<!--
	 <use xlink:href="#pointilles" transform="scale(5 130)" style="fill:yellow"/>
	 -->
	</g>
	<g id="coteDroit" transform="translate(1200 -65)">
	<!--
	 <use xlink:href="#pointilles" transform="scale(-5 130)" style="fill:yellow"/>
	 -->
	</g> 
	<g id="empty" onload="reset()"/>

  </g>

</svg> 
