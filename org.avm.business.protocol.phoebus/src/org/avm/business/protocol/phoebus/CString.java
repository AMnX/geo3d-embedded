/* @flavorc
 *
 * CString.java
 * 
 * This file was automatically generated by flavorc
 * from the source file:
 *     'phoebus.fl'
 *
 * For information on flavorc, visit the Flavor Web site at:
 *     http://www.ee.columbia.edu/flavor
 *
 * -- Do not edit by hand --
 *
 */

package org.avm.business.protocol.phoebus;
import java.io.IOException;

import flavor.IBitstream;
import flavor.MapResult;

public class CString {
    int count;
    int _value[] = new int[256];
    
	public CString() {
		this("");
	}
    
	public CString(String value) {		
		setValue(value);
	}

	public String getValue() {
		byte[] buffer = new byte[count -1];
		for (int i = 0; i < buffer.length; i++) {
			buffer[i] = (byte) _value[i];
		}
		return new String(buffer);
	}

	public void setValue(String value) {
		byte[] buffer = value.getBytes();
		for (int i = 0; i < buffer.length; i++) {
			_value[i] = buffer[i];
		}
		_value[buffer.length] = 0;
		count = buffer.length+1;
	}
	
	public String toString() {
		return getValue();
	}  
	

    public int get(IBitstream _F_bs) throws IOException {
        int _F_ret = 0;
        MapResult _F_mr;
        int _F_dim0;
        count = 0;
        do {
            _F_dim0 = count;
            _value[_F_dim0] = _F_bs.getbits(8);
            count++;
            if (1==0) break;
        } while (_value[count-1]!=0);
        return _F_ret;
    }

    public int put(IBitstream _F_bs) throws IOException {
        int _F_ret = 0;
        MapResult _F_mr;
        int _F_dim0;
        count = 0;
        do {
            _F_dim0 = count;
            _F_bs.putbits(_value[_F_dim0], 8);
            count++;
            if (1==0) break;
        } while (_value[count-1]!=0);
        return _F_ret;
    }
}
