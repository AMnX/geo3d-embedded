/* @flavorc
 *
 * PriseService.java
 * 
 * This file was automatically generated by flavorc
 * from the source file:
 *     'phoebus.fl'
 *
 * For information on flavorc, visit the Flavor Web site at:
 *     http://www.ee.columbia.edu/flavor
 *
 * -- Do not edit by hand --
 *
 */

package org.avm.business.protocol.phoebus;
import java.io.IOException;
import java.io.InputStream;

import org.jibx.runtime.BindingDirectory;
import org.jibx.runtime.IBindingFactory;
import org.jibx.runtime.IUnmarshallingContext;

import flavor.Bitstream;
import flavor.IBitstream;
import flavor.MapResult;

public class PriseService extends Message {
    int _conducteurRemplacement;
    int _vehiculeRemplacement;
    
	public static final int MESSAGE_TYPE = 9;

    public static final String MESSAGE_NAME = "prise-service";

    public PriseService() {
	super();
	_entete._type = MESSAGE_TYPE;
	_entete._champs._date = 1;
	_entete._date = new Horodate();

	_entete._champs._service = 1;
	_entete._service = new Service();
    }

    public PriseService(int conducteur, int vehicule) {
	super();
	_conducteurRemplacement = conducteur;
	_vehiculeRemplacement = vehicule;
    }

    public int getConducteurRemplacement() {
	return _conducteurRemplacement;
    }

    public int getVehiculeRemplacement() {
	return _vehiculeRemplacement;
    }

    public void setConducteurRemplacement(int conducteurRemplacement) {
	_conducteurRemplacement = conducteurRemplacement;
    }

    public void setVehiculeRemplacement(int vehiculeRemplacement) {
	_vehiculeRemplacement = vehiculeRemplacement;
    }

    public String toString() {
	return MESSAGE_NAME + " [" + super.toString() + "]" + " conducteur "
		+ _conducteurRemplacement + " vehicule "
		+ _vehiculeRemplacement;
    }

    public static class DefaultMessageFactory extends MessageFactory {

	protected Message unmarshal(InputStream in) throws Exception {
	    IBindingFactory factory = BindingDirectory
		    .getFactory(PriseService.class);
	    IUnmarshallingContext context = factory
		    .createUnmarshallingContext();
	    return (Message) context.unmarshalDocument(in, null);

	}

	protected Message get(InputStream in) throws Exception {
	    Bitstream bs = new Bitstream(in);
	    Message message = new PriseService();
	    message.get(bs);
	    bs.close();
	    in.reset();
	    return message;
	}

    }

    static {
	MessageFactory.factories.put(new Integer(MESSAGE_TYPE),
		new DefaultMessageFactory());
    }
	

    public int get(IBitstream _F_bs) throws IOException {
        int _F_ret = 0;
        MapResult _F_mr;
        _F_ret += super.get(_F_bs);
        _conducteurRemplacement = _F_bs.getbits(32);
        _vehiculeRemplacement = _F_bs.getbits(16);
        return _F_ret;
    }

    public int put(IBitstream _F_bs) throws IOException {
        int _F_ret = 0;
        MapResult _F_mr;
        _F_ret += super.put(_F_bs);
        _F_bs.putbits(_conducteurRemplacement, 32);
        _F_bs.putbits(_vehiculeRemplacement, 16);
        return _F_ret;
    }
}
